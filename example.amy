let fib (n: i32) -> i32 =
    if n < 2 then
        n
    else
        fib (n - 1) + fib (n - 2)

forall (t: type)
let get (v: Vec t) (i: usize) -> t
    where i < length v
=
    (* blablabla *)

forall (n: i32)
let addn (m: i32) -> i32 = n + m

forall (a: type) (b: type)
type Pair = Pair (a: a) (b: b)

type Expr
    = Int i32
    | Add (Box Expr) (Box Expr)
    | Sub (Box Expr) (Box Expr)

forall (a: type)
type Option
    = Some a
    | None
